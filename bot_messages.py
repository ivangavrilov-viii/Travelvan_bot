from telebot.types import Message


def hello(message: Message, input_language: bool) -> str:
    if input_language:
        return f'Hello, {message.chat.first_name}üëã\n' \
               f'I\'m bot TravelvanBot (@Travelvan_bot) by "Too Easy Travel"\n' \
               f'I can search hotels for you\n' \
               f'Write /help to get info about me\n'
    return f'–ü—Ä–∏–≤–µ—Ç, {message.chat.first_name}üëã\n' \
           f'–Ø - –±–æ—Ç –∫–æ–º–ø–∞–Ω–∏–∏ "Too Easy Travel" TravelvanBot (@Travelvan_bot)\n' \
           f'–Ø –∑–∞–Ω–∏–º–∞—é—Å—å –ø–æ–∏—Å–∫–æ–º –ø–æ–¥—Ö–æ–¥—è—â–∏—Ö –æ—Ç–µ–ª–µ–π\n' \
           f'–ß—Ç–æ–±—ã –ø–æ–ª—É—á–∏—Ç—å –æ–±–æ –º–Ω–µ —Å–ø—Ä–∞–≤–∫—É, –≤–≤–µ–¥–∏—Ç–µ /help\n'


def help_message(input_language: bool) -> str:
    if input_language:
        return f'You can use any methods now:\n' \
               f'/help ‚Äî help with bot commands\n' \
               f'/language ‚Äî change language\n' \
               f'/lowprice ‚Äî search for the cheapest hotels in the city\n' \
               f'/highprice ‚Äî search for the most expensive hotels in the city\n' \
               f'/bestdeal ‚Äî search for hotels most suitable for price and location from center\n' \
               f'/history ‚Äî hotel search history\n'
    return f'–í—ã –º–æ–∂–µ—Ç–µ –≤–æ—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è –∫–æ–º–∞–Ω–¥–∞–º–∏:\n' \
           f'/help ‚Äî –ø–æ–º–æ—â—å –ø–æ –∫–æ–º–∞–Ω–¥–∞–º –±–æ—Ç–∞\n' \
           f'/language ‚Äî –∏–∑–º–µ–Ω–∏—Ç—å —è–∑—ã–∫\n' \
           f'/lowprice ‚Äî –ø–æ–∏—Å–∫ —Å–∞–º—ã—Ö –¥–µ—à–µ–≤—ã—Ö –æ—Ç–µ–ª–µ–π –≥–æ—Ä–æ–¥–∞\n' \
           f'/highprice ‚Äî –ø–æ–∏—Å–∫ —Å–∞–º—ã—Ö –¥–æ—Ä–æ–≥–∏—Ö –æ—Ç–µ–ª–µ–π –≥–æ—Ä–æ–¥–∞\n' \
           f'/bestdeal ‚Äî  –ø–æ–∏—Å–∫ –æ—Ç–µ–ª–µ–π, –Ω–∞–∏–±–æ–ª–µ–µ –ø–æ–¥—Ö–æ–¥—è—â–∏—Ö –ø–æ —Ü–µ–Ω–µ –∏ —Ä–∞—Å–ø–æ–ª–æ–∂–µ–Ω–∏—é –æ—Ç —Ü–µ–Ω—Ç—Ä–∞\n' \
           f'/history ‚Äî –≤—ã–≤–æ–¥ –∏—Å—Ç–æ—Ä–∏–∏ –ø–æ–∏—Å–∫–∞ –æ—Ç–µ–ª–µ–π\n'


def unknown_command(input_language: bool) -> str:
    if input_language:
        return f'I\'m don\'t know this command...'
    return f'–Ø –Ω–µ –∑–Ω–∞—é —Ç–∞–∫–æ–π –∫–æ–º–∞–Ω–¥—ã... '


def city_enter(input_language: bool) -> str:
    if input_language:
        return 'Enter city to search: '
    return '–í–≤–µ–¥–∏—Ç–µ –≥–æ—Ä–æ–¥ –¥–ª—è –ø–æ–∏—Å–∫–∞: '


def hotel_incorrect_enter(input_language: bool) -> tuple[str, str]:
    logger_error = 'Incorrect entry of hotels number. Another attempt '
    if input_language:
        message = f'Incorrect input. Try again\nEnter count of hotels: \nMaximum number of hotels - 25'
    else:
        message = f"–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π –≤–≤–æ–¥. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â—ë —Ä–∞–∑\n–í–≤–µ–¥–∏—Ç–µ —á–∏—Å–ª–æ –æ—Ç–µ–ª–µ–π: \n–ú–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–µ —á–∏—Å–ª–æ –æ—Ç–µ–ª–µ–π - 25"
    return logger_error, message


def hotels_count_enter(input_language: bool) -> str:
    if input_language:
        return 'Enter count of hotels: \nMaximum number of hotels - 25'
    return '–í–≤–µ–¥–∏—Ç–µ —á–∏—Å–ª–æ –æ—Ç–µ–ª–µ–π: \n–ú–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–µ —á–∏—Å–ª–æ –æ—Ç–µ–ª–µ–π - 25'


def price_incorrect_enter(input_language: bool) -> tuple[str, str]:
    logger_error = 'Incorrect entry of the price range. Another attempt '
    if input_language:
        message = f'Incorrect input. Try again\n' \
                  f'\nEnter the minimum and maximum price in $, USD:\n(Space-separated enter) '
    else:
        message = f"–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π –≤–≤–æ–¥. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â—ë —Ä–∞–∑" \
                  f"\n–í–≤–µ–¥–∏—Ç–µ –º–∏–Ω–∏–º–∞–ª—å–Ω—É—é –∏ –º–∞–∫—Å–∏–º–∞–ª—å–Ω—É—é —Ü–µ–Ω—ã –≤ RUB, ‚ÇΩ:\n(–í–≤–æ–¥ —á–µ—Ä–µ–∑ –ø—Ä–æ–±–µ–ª)"
    return logger_error, message


def price_enter(input_language: bool) -> str:
    if input_language:
        return f'Enter the minimum and maximum price in $, USD:\n(Space-separated enter)'
    return f'–í–≤–µ–¥–∏—Ç–µ –º–∏–Ω–∏–º–∞–ª—å–Ω—É—é –∏ –º–∞–∫—Å–∏–º–∞–ª—å–Ω—É—é —Ü–µ–Ω—ã –≤ RUB, ‚ÇΩ:\n(–í–≤–æ–¥ —á–µ—Ä–µ–∑ –ø—Ä–æ–±–µ–ª) '


def photo_not_found(input_language: bool) -> str:
    if input_language:
        return 'We couldn\'t find a photo for this hotel ...\nWe apologize'
    return '–§–æ—Ç–æ –¥–ª—è –¥–∞–Ω–Ω–æ–≥–æ –æ—Ç–µ–ª—è –Ω–∞–π—Ç–∏ –Ω–µ –ø–æ–ª—É—á–∏–ª–æ—Å—å...\n–ü—Ä–∏–Ω–æ—Å–∏–º —Å–≤–æ–∏ –∏–∑–≤–∏–Ω–µ–Ω–∏—è'


def photo_count_enter(input_language: bool) -> str:
    if input_language:
        return 'Enter count of photo: \nMaximum number of photo - 5'
    return '–í–≤–µ–¥–∏—Ç–µ —á–∏—Å–ª–æ —Ñ–æ—Ç–æ: \n–ú–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–µ —á–∏—Å–ª–æ —Ñ–æ—Ç–æ - 5'


def photo_incorrect_enter(input_language: bool) -> tuple[str, str]:
    logger_error = 'Incorrect entry of the photo range. Another attempt '
    if input_language:
        message = f'Incorrect input. Try again\n' \
                  f'Enter count of photo for each hotel: \nMaximum number of photo - 5'
    else:
        message = f"–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π –≤–≤–æ–¥. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â—ë —Ä–∞–∑\n" \
                  f"–í–≤–µ–¥–∏—Ç–µ —á–∏—Å–ª–æ —Ñ–æ—Ç–æ –¥–ª—è –∫–∞–∂–¥–æ–≥–æ –æ—Ç–µ–ª—è: \n–ú–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–µ —á–∏—Å–ª–æ —Ñ–æ—Ç–æ - 5"
    return logger_error, message


def photo_refusal_message(input_language: bool) -> tuple[str, str]:
    logger_error = 'The user refused to display the photo'
    if input_language:
        message = 'You have given up the photo\nSearching hotels, wait a while...'
    else:
        message = '–í—ã –æ—Ç–∫–∞–∑–∞–ª–∏—Å—å –æ—Ç —Ñ–æ—Ç–æ\n–ü–æ–∏—Å–∫ –æ—Ç–µ–ª–µ–π, –ø–æ–¥–æ–∂–¥–∏—Ç–µ –Ω–µ–∫–æ—Ç–æ—Ä–æ–µ –≤—Ä–µ–º—è...'
    return logger_error, message


def searching_location(input_language: bool) -> str:
    if input_language:
        return 'Searching location, wait a while...'
    return '–ü–æ–∏—Å–∫ –≥–æ—Ä–æ–¥–∞, –ø–æ–¥–æ–∂–¥–∏—Ç–µ –Ω–µ–∫–æ—Ç–æ—Ä–æ–µ –≤—Ä–µ–º—è...'


def searching_hotels(input_language: bool) -> str:
    if input_language:
        return 'Searching hotels, wait a while...'
    return '–ü–æ–∏—Å–∫ –æ—Ç–µ–ª–µ–π, –ø–æ–¥–æ–∂–¥–∏—Ç–µ –Ω–µ–∫–æ—Ç–æ—Ä–æ–µ –≤—Ä–µ–º—è...'


def distance_enter(input_language: bool) -> str:
    if input_language:
        return 'Enter the minimum and maximum distance to centre in miles: \n(Space-separated enter) '
    else:
        return '–í–≤–µ–¥–∏—Ç–µ –º–∏–Ω–∏–º–∞–ª—å–Ω–æ–µ –∏ –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–µ —Ä–∞—Å—Å—Ç–æ—è–Ω–∏—è –¥–æ —Ü–µ–Ω—Ç—Ä–∞ (–≤ –∫–∏–ª–æ–º–µ—Ç—Ä–∞—Ö): \n(–í–≤–æ–¥ —á–µ—Ä–µ–∑ –ø—Ä–æ–±–µ–ª)'


def distance_incorrect_enter(input_language: bool) -> tuple[str, str]:
    logger_error = 'Incorrect entry of the price range. Another attempt '
    if input_language:
        message = f'Incorrect input. Try again\n' \
                  f'Enter the minimum and maximum distance in miles:\n(Space-separated enter) '
    else:
        message = f"–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π –≤–≤–æ–¥. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â—ë —Ä–∞–∑\n" \
                  f"–í–≤–µ–¥–∏—Ç–µ –º–∏–Ω–∏–º–∞–ª—å–Ω–æ–µ –∏ –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–µ —Ä–∞—Å—Å—Ç–æ—è–Ω–∏—è –≤ –∫–∏–ª–æ–º–µ—Ç—Ä–∞—Ö:\n(–í–≤–æ–¥ —á–µ—Ä–µ–∑ –ø—Ä–æ–±–µ–ª) "
    return logger_error, message


def problem_on_server(input_language: bool) -> str:
    if input_language:
        return 'Not found. Server has few problems. Try again later...'
    return '–ù–µ –Ω–∞–π–¥–µ–Ω–æ. –ù–∞ –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç –ø—Ä–æ–±–ª–µ–º—ã –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ...'
